#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Smart Environment Monitoring System"
  https://create.arduino.cc/cloud/things/1693b2f7-fcb2-4777-9288-7a84788b4c02 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float humidity;
  float temperature;
  int soilMoisture;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include <DHT.h>

// Define DHT sensor pin and type
#define DHTPIN 2   // GPIO2 for DHT11 data pin
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// Define the pin for the soil moisture sensor (resistive type)
const int soilMoisturePin = 34;  
const int dryValue = 1023;   // Adjust after testing in dry soil
const int wetValue = 0;      // Adjust after testing in water

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

    dht.begin();
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
   // Read data from the soil moisture sensor (resistive)
 // Read raw soil sensor value
  int rawValue = analogRead(soilMoisturePin);  // 0..4095
  Serial.print("Raw Soil Value: ");
  Serial.println(rawValue);

  // Map to percentage (adjust calibration after testing in dry & wet)
  soilMoisture = map(rawValue, 3500, 1000, 0, 100);  
  soilMoisture = constrain(soilMoisture, 0, 100);
  // Read data from DHT11
  temperature = dht.readTemperature();
  humidity = dht.readHumidity();

  // Debugging output
  Serial.print("Soil Moisture: ");
  Serial.print(soilMoisture);
  Serial.println("%");

  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.println("°C");

  Serial.print("Humidity: ");
  Serial.print(humidity);
  Serial.println("%");

  delay(2500);
  
}

/*
  Since Temperature is READ_WRITE variable, onTemperatureChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTemperatureChange()  {
  // Add your code here to act upon Temperature change
}

/*
  Since Humidity is READ_WRITE variable, onHumidityChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onHumidityChange()  {
  // Add your code here to act upon Humidity change
}

/*
  Since SoilMoisture is READ_WRITE variable, onSoilMoistureChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onSoilMoistureChange()  {
  // Add your code here to act upon SoilMoisture change
}
