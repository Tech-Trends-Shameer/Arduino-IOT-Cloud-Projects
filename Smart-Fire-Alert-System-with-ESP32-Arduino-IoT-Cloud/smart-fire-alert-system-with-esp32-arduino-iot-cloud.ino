/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/26bdfb3b-392c-445b-a2c4-2040d635a607 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool fireDetected;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

const int firePin = 2;   // Pin connected to the fire sensor
const int ledPin = 5;
const int buzzerPin = 4; // Pin connected to the buzzer
bool isFireDetected = false;


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  
    // Set firePin as input
  pinMode(firePin, INPUT);

  // Set LEDPin as output
  pinMode(ledPin, OUTPUT);

  // Set buzzerPin as output
  pinMode(buzzerPin, OUTPUT);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
    bool isFire = digitalRead(firePin);
  Serial.print("IsFire");
  Serial.println(isFire);
  // Check if fire is detected
  if (!isFire == true ) {
    fireDetected = true; // Update the fireDetected property directly
    isFireDetected = true;
    sendFireStatus(true);
    activateLED(true);
    activateBuzzer(true);

  } else if (!isFire == false) {
    fireDetected = false; // Update the fireDetected property directly
    isFireDetected = false;
    sendFireStatus(false);
    activateLED(false);
    activateBuzzer(false);

  }

  delay(1000); // Delay to avoid excessive checks
  
}

void sendFireStatus(bool fireDetected)
{

  if (fireDetected)
  {
    Serial.println("Fire detected! Sending alert to server..."); // Send a message indicating fire is detected
    fireDetected = true;
  }
  else {

    Serial.println("Fire not detected."); // Send a message indicating fire is not detected
    fireDetected = false;
  }
}

void activateBuzzer(bool activate) {
  if (activate) {
    // Turn on the buzzer
    digitalWrite(buzzerPin, HIGH);
  } else {
    // Turn off the buzzer
    digitalWrite(buzzerPin, LOW);
  }
}

void activateLED(bool activate) {
  if (activate) {
    // Turn on the buzzer
    digitalWrite(ledPin, HIGH);
  } else {
    // Turn off the buzzer
    digitalWrite(ledPin, LOW);
  }
}



/*
  Since FireDetected is READ_WRITE variable, onFireDetectedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onFireDetectedChange()  {
  // Add your code here to act upon FireDetected change
}
